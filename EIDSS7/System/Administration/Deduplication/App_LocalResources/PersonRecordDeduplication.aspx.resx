<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Lbl_Save_Success" xml:space="preserve">
    <value>The record is saved successfully.</value>
  </data>
  <data name="Pnl_Please_Wait.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="AnotherAddress" xml:space="preserve">
    <value>Is there another address where this person can reside?</value>
  </data>
  <data name="Apartment/Unit" xml:space="preserve">
    <value>Apartment/Unit</value>
  </data>
  <data name="Building" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="Citizenship" xml:space="preserve">
    <value>Citizenship</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CountryCode" xml:space="preserve">
    <value>Country Code</value>
  </data>
  <data name="CurrentlyInSchool" xml:space="preserve">
    <value>Does the patient currently attend school?</value>
  </data>
  <data name="Date_Of_Birth" xml:space="preserve">
    <value>Date Of Birth</value>
  </data>
  <data name="Employed" xml:space="preserve">
    <value>Is this Person currently employed?</value>
  </data>
  <data name="EmployedDate" xml:space="preserve">
    <value>Date of Last Presence at Work</value>
  </data>
  <data name="EmployerForeignAddress" xml:space="preserve">
    <value>Work Address same as Residence Address</value>
  </data>
  <data name="EmployerName" xml:space="preserve">
    <value>Employer Name</value>
  </data>
  <data name="First_Name" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="ForeignAddress" xml:space="preserve">
    <value>Foreign Address</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Hdg_Person_Record_Deduplication.InnerText" xml:space="preserve">
    <value>Person Record Deduplication</value>
  </data>
  <data name="House" xml:space="preserve">
    <value>House</value>
  </data>
  <data name="Last_Name" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Lbl_Employment_Information.InnerText" xml:space="preserve">
    <value>Person Employment/School Information</value>
  </data>
  <data name="Lbl_Employment_Information.Text" xml:space="preserve">
    <value>Person Employment/School Information</value>
  </data>
  <data name="Lbl_Person_Current_Residence.InnerText" xml:space="preserve">
    <value>Person Current Residence</value>
  </data>
  <data name="Lbl_Person_Current_Residence.Text" xml:space="preserve">
    <value>Person Current Residence</value>
  </data>
  <data name="Lbl_Person_Information.InnerText" xml:space="preserve">
    <value>Person Information</value>
  </data>
  <data name="Lbl_Person_Information.Text" xml:space="preserve">
    <value>Person Information</value>
  </data>
  <data name="Lbl_Superceded.InnerText" xml:space="preserve">
    <value>Superceded</value>
  </data>
  <data name="Lbl_Superceded.Text" xml:space="preserve">
    <value>Superceded</value>
  </data>
  <data name="Lbl_Survivor.InnerText" xml:space="preserve">
    <value>Survivor</value>
  </data>
  <data name="Lbl_Survivor.Text" xml:space="preserve">
    <value>Survivor</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="Middle_Name" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="Occupation" xml:space="preserve">
    <value>Occupation</value>
  </data>
  <data name="Passport_Number" xml:space="preserve">
    <value>Passport Number</value>
  </data>
  <data name="Personal_ID" xml:space="preserve">
    <value>Personal ID</value>
  </data>
  <data name="Personal_ID_Type" xml:space="preserve">
    <value>Personal ID Type</value>
  </data>
  <data name="Person_ID" xml:space="preserve">
    <value>Person ID</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhoneType" xml:space="preserve">
    <value>Phone Type</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="Rayon" xml:space="preserve">
    <value>Rayon</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="SchoolAddress" xml:space="preserve">
    <value>School Address</value>
  </data>
  <data name="SchoolDate" xml:space="preserve">
    <value>Date of Last Presence at School</value>
  </data>
  <data name="SchoolName" xml:space="preserve">
    <value>School Name</value>
  </data>
  <data name="Settlement" xml:space="preserve">
    <value>Settlement</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
</root>