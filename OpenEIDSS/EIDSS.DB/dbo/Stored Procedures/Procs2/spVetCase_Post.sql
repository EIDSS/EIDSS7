

--##SUMMARY Posts general Veterinary case data.
--##SUMMARY Wet case can't be deleted using this procedure, spVetCase_Delete procedure is used for this purpose.
--##SUMMARY This procedure is usable for both avian and LiveStock cases.

--##REMARKS Author: Zurin M.
--##REMARKS Create date: 22.11.2009

--##REMARKS UPDATED BY: Vorobiev E. --deleted tlbCase
--##REMARKS Date: 17.04.2013

--##RETURNS Doesn't use


/*
--Example of a call of procedure:
DECLARE @idfCase bigint
DECLARE @idfsCaseClassification bigint
DECLARE @idfsCaseType bigint
DECLARE @datEnteredDate datetime
DECLARE @strCaseID nvarchar(200)
DECLARE @uidOfflineCaseID uniqueidentifier
DECLARE @idfsTentativeDiagnosis bigint
DECLARE @idfsTentativeDiagnosis1 bigint
DECLARE @idfsTentativeDiagnosis2 bigint
DECLARE @idfsFinalDiagnosis bigint
DECLARE @idfPersonInvestigatedBy bigint
DECLARE @idfPersonEnteredBy bigint
DECLARE @idfPersonReportedBy bigint
DECLARE @idfObservation bigint
DECLARE @idfsSite bigint
DECLARE @datReportDate datetime
DECLARE @datAssignedDate datetime
DECLARE @datInvestigationDate datetime
DECLARE @datTentativeDiagnosisDate datetime
DECLARE @datTentativeDiagnosis1Date datetime
DECLARE @datTentativeDiagnosis2Date datetime
DECLARE @datFinalDiagnosisDate datetime
DECLARE @strSampleNotes nvarchar(1000)
DECLARE @strTestNotes nvarchar(1000)
DECLARE @strSummaryNotes nvarchar(1000)
DECLARE @strClinicalNotes nvarchar(1000)
DECLARE @strFieldAccessionID nvarchar(200)
DECLARE @idfsFormTemplate bigint
DECLARE @idfFarm bigint


EXECUTE spVetCase_Post 
   @idfCase
  ,@idfsCaseClassification
  ,@idfsCaseType
  ,@datEnteredDate
  ,@strCaseID
  ,@uidOfflineCaseID
  ,@idfsTentativeDiagnosis
  ,@idfsTentativeDiagnosis1
  ,@idfsTentativeDiagnosis2
  ,@idfsFinalDiagnosis
  ,@idfPersonInvestigatedBy
  ,@idfPersonEnteredBy
  ,@idfPersonReportedBy
  ,@idfObservation
  ,@idfsSite
  ,@datReportDate
  ,@datAssignedDate
  ,@datInvestigationDate
  ,@datTentativeDiagnosisDate
  ,@datTentativeDiagnosis1Date
  ,@datTentativeDiagnosis2Date
  ,@datFinalDiagnosisDate
  ,@strSampleNotes
  ,@strTestNotes
  ,@strSummaryNotes
  ,@strClinicalNotes
  ,@strFieldAccessionID
  ,@idfsFormTemplate
  ,@idfFarm
  ,@idfReportedByOffice
  ,@idfInvestigatedByOffice
*/

create            Proc	spVetCase_Post
	 @idfCase					bigint --##PARAM @idfCase - case ID
	,@idfOutbreak					bigint --##PARAM @idfOutbreak Id of the outbreak, which includes a case (reference to tlbOutbreak)
	,@idfsCaseClassification		bigint --##PARAM @idfsCaseClassification - case classification, reference to rftCaseClassification (19000011)
	,@idfsCaseProgressStatus		bigint --##PARAM @idfsCaseProgressStatus - case progress status, reference to (19000111)
	,@idfsCaseType					bigint --##PARAM @idfsCaseType - case Type, reference to rftCaseType (19000012). Can be LiveStock(10012003) or Avian(10012004)
	,@datEnteredDate				DateTime --##PARAM @datEnteredDate - date when case is entered inot system
	,@strCaseID						NVARCHAR(200) --##PARAM @strCaseID - unique human readable case identifier, generated by system
	,@uidOfflineCaseID				uniqueidentifier --##PARAM @uidOfflineCaseID
	,@idfsTentativeDiagnosis		bigint --##PARAM @idfsTentativeDiagnosis - case tentative diagnosis
	,@idfsTentativeDiagnosis1		bigint --##PARAM @idfsTentativeDiagnosis1 - case tentative diagnosis 1
	,@idfsTentativeDiagnosis2		bigint --##PARAM @idfsTentativeDiagnosis2 - case tentative diagnosis 2
	,@idfsFinalDiagnosis			bigint --##PARAM @idfsFinalDiagnosis - case final diagnosis
	,@idfPersonInvestigatedBy		bigint --##PARAM @idfPersonInvestigatedBy - reference to person that investigated case 
	,@idfPersonEnteredBy			bigint --##PARAM @idfPersonEnteredBy - reference to person that entered case into system
	,@idfPersonReportedBy			bigint --##PARAM @idfPersonReportedBy- reference to person that repored about case
	,@idfObservation				bigint --##PARAM @idfObservation - reference to flexible form containing case control measures
	,@idfsFormTemplate				BIGINT --##PARAM @idfsFormTemplate - reference to template that was used last time for control measures flexible form 
	,@idfsSite						bigint --##PARAM @idfsSite - site where case was entered. If not defined by client app, the current system site is used
	,@datReportDate					DateTime --##PARAM @datReportDate - date when case was reported
	,@datAssignedDate				DateTime --##PARAM @datAssignedDate - date when case was assigned for investigation
	,@datInvestigationDate			DateTime --##PARAM @datInvestigationDate - date when case was investigated
	,@datTentativeDiagnosisDate		DateTime --##PARAM @datTentativeDiagnosisDate - date of tentative diagnosis
	,@datTentativeDiagnosis1Date	DateTime --##PARAM @datTentativeDiagnosis1Date - date of tentative diagnosis 1
	,@datTentativeDiagnosis2Date	DateTime --##PARAM @datTentativeDiagnosis2Date - date of tentative diagnosis 2
	,@datFinalDiagnosisDate			DateTime --##PARAM @datFinalDiagnosisDate - date of final diagnosis
	,@strSampleNotes				NVARCHAR(1000) --##PARAM @strSampleNotes - arbitraty text data related with case specimens
	,@strTestNotes					NVARCHAR(1000) --##PARAM @strTestNotes - arbitraty text data related with case tests
	,@strSummaryNotes				NVARCHAR(1000) --##PARAM @strSummaryNotes - arbitraty text data related with case itself
	,@strClinicalNotes				NVARCHAR(1000) --##PARAM @strClinicalNotes - currently is not used
	,@strFieldAccessionID			NVARCHAR(200)
	,@idfFarm						bigint--##PARAM @idfFarm - farm ID   --##PARAM @strFieldAccessionID - unique human readable case identifier assigned to case at field
	,@idfsYNTestsConducted			bigint
    ,@idfReportedByOffice			bigint
    ,@idfInvestigatedByOffice		bigint
	,@idfsCaseReportType			bigint = 4578940000002 ----##PARAM @idfsCaseReportType - case report type (Active/Passive). Passive by default
	,@datModificationForArchiveDate	datetime = NULL
	,@blnCheckPermissions BIT = 1
As


	if @idfCase is null return -1;

IF @blnCheckPermissions = 1
BEGIN
	declare @check int
	IF Exists (SELECT idfVetCase FROM dbo.tlbVetCase WHERE idfVetCase = @idfCase)
	BEGIN
		execute @check=spCheckPermission @idfsSystemFunction=10094028,@idfsObjectOperation=10059004,@idfObjectID=@idfCase --vet,write
	END
	else
	BEGIN
		execute @check=spCheckPermission @idfsSystemFunction=10094028,@idfsObjectOperation=10059001,@idfObjectID=@idfCase --vet,create
	END	

	if @check<>1 
		begin
   			RAISERROR ('msgVetCasePermission', 16, 1)
			return -1
		END
END		
		
if @idfsCaseReportType is NULL
	SET @idfsCaseReportType = 4578940000002

if not exists	(
	select	*
	from	tlbOutbreak Outbreak
	where	Outbreak.idfOutbreak = @idfOutbreak
			and Outbreak.intRowStatus = 0
				)
begin
	set @idfOutbreak = null
end

EXECUTE spOutbreak_CheckPrimaryCase @idfCase, @idfOutbreak


IF Exists (SELECT idfVetCase FROM dbo.tlbVetCase WHERE idfVetCase = @idfCase)
BEGIN
	UPDATE tlbVetCase
	   SET idfVetCase = @idfCase
		  ,idfsTentativeDiagnosis = @idfsTentativeDiagnosis
		  ,idfsTentativeDiagnosis1 = @idfsTentativeDiagnosis1
		  ,idfsTentativeDiagnosis2 = @idfsTentativeDiagnosis2
		  ,idfsFinalDiagnosis = @idfsFinalDiagnosis
		  ,idfPersonInvestigatedBy = @idfPersonInvestigatedBy
		  ,idfPersonEnteredBy = @idfPersonEnteredBy
		  ,idfPersonReportedBy = @idfPersonReportedBy
		  ,idfObservation = @idfObservation
		  --,idfsSite = @idfsSite
		  ,datReportDate = @datReportDate
		  ,datAssignedDate = @datAssignedDate
		  ,datInvestigationDate = @datInvestigationDate
		  ,datTentativeDiagnosisDate = @datTentativeDiagnosisDate
		  ,datTentativeDiagnosis1Date = @datTentativeDiagnosis1Date
		  ,datTentativeDiagnosis2Date = @datTentativeDiagnosis2Date
		  ,datFinalDiagnosisDate = @datFinalDiagnosisDate
		  ,strTestNotes = @strTestNotes
		  ,strSummaryNotes = @strSummaryNotes
		  ,strClinicalNotes = @strClinicalNotes
		  ,strFieldAccessionID = @strFieldAccessionID
		  ,idfFarm = @idfFarm
		  ,idfsYNTestsConducted = @idfsYNTestsConducted
		  ,idfReportedByOffice = @idfReportedByOffice			
		  ,idfInvestigatedByOffice = @idfInvestigatedByOffice	
		  ,idfsCaseReportType = @idfsCaseReportType	
		  , idfsCaseClassification = @idfsCaseClassification
		  , idfOutbreak = @idfOutbreak
		  --, datEnteredDate = @datEnteredDate
		  --, strCaseID = @strCaseID
		  , idfsCaseProgressStatus = @idfsCaseProgressStatus
		  , strSampleNotes = @strSampleNotes
		  , idfsCaseType = @idfsCaseType
		  , uidOfflineCaseID = @uidOfflineCaseID
		  ,datModificationForArchiveDate = getdate()
	WHERE
			idfVetCase = @idfCase
END
ELSE
BEGIN
	IF ISNULL(@strCaseID,N'') = N'' OR LEFT(ISNULL(@strCaseID,N''),4)='(new'
	BEGIN
		EXEC dbo.spGetNextNumber 10057024, @strCaseID OUTPUT , NULL --N'Vet Case'
	END
	
	INSERT INTO tlbObservation
           (
			idfObservation
           ,idfsFormTemplate
			)
     VALUES
           (
			@idfObservation
           ,@idfsFormTemplate
			)

	INSERT INTO tlbVetCase
           (idfVetCase
           ,idfsTentativeDiagnosis
           ,idfsTentativeDiagnosis1
           ,idfsTentativeDiagnosis2
           ,idfsFinalDiagnosis
           ,idfPersonInvestigatedBy
           ,idfPersonEnteredBy
           ,idfPersonReportedBy
           ,idfObservation
           ,idfsSite
           ,datReportDate
           ,datAssignedDate
           ,datInvestigationDate
           ,datTentativeDiagnosisDate
           ,datTentativeDiagnosis1Date
           ,datTentativeDiagnosis2Date
           ,datFinalDiagnosisDate
           ,strTestNotes
           ,strSummaryNotes
           ,strClinicalNotes
           ,strFieldAccessionID
           ,idfFarm
		   ,idfsYNTestsConducted
		   ,idfReportedByOffice
		   ,idfInvestigatedByOffice
		   ,idfsCaseReportType
			, idfsCaseClassification
			, idfOutbreak
			, datEnteredDate
			, strCaseID
			, idfsCaseProgressStatus
			, strSampleNotes
			, idfsCaseType
			, uidOfflineCaseID
			,datModificationForArchiveDate
           )
     VALUES
           (@idfCase
           ,@idfsTentativeDiagnosis
           ,@idfsTentativeDiagnosis1
           ,@idfsTentativeDiagnosis2
           ,@idfsFinalDiagnosis
           ,@idfPersonInvestigatedBy
           ,@idfPersonEnteredBy
           ,@idfPersonReportedBy
           ,@idfObservation
           ,ISNULL(@idfsSite,dbo.fnSiteID())
           ,@datReportDate
           ,@datAssignedDate
           ,@datInvestigationDate
           ,@datTentativeDiagnosisDate
           ,@datTentativeDiagnosis1Date
           ,@datTentativeDiagnosis2Date
           ,@datFinalDiagnosisDate
           ,@strTestNotes
           ,@strSummaryNotes
           ,@strClinicalNotes
           ,@strFieldAccessionID
           ,@idfFarm
		   ,@idfsYNTestsConducted
		   ,@idfReportedByOffice
		   ,@idfInvestigatedByOffice
		   ,@idfsCaseReportType
			, @idfsCaseClassification
			, @idfOutbreak
			, @datEnteredDate
			, @strCaseID
			, @idfsCaseProgressStatus
			, @strSampleNotes
			, @idfsCaseType
			, @uidOfflineCaseID
			, getdate()
           )
END

return 0


